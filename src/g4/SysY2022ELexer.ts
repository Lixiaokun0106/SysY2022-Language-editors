// Generated from SysY2022E.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class SysY2022ELexer extends Lexer {
	public static readonly INT = 1;
	public static readonly FLOAT = 2;
	public static readonly VOID = 3;
	public static readonly CONST = 4;
	public static readonly RETURN = 5;
	public static readonly IF = 6;
	public static readonly ELSE = 7;
	public static readonly WHILE = 8;
	public static readonly BREAK = 9;
	public static readonly CONTINUE = 10;
	public static readonly FOR = 11;
	public static readonly STRUCT = 12;
	public static readonly LP = 13;
	public static readonly RP = 14;
	public static readonly LB = 15;
	public static readonly RB = 16;
	public static readonly LC = 17;
	public static readonly RC = 18;
	public static readonly COMMA = 19;
	public static readonly SEMICOLON = 20;
	public static readonly QUESTION = 21;
	public static readonly COLON = 22;
	public static readonly MINUS = 23;
	public static readonly NOT = 24;
	public static readonly ASSIGN = 25;
	public static readonly ADD = 26;
	public static readonly MUL = 27;
	public static readonly DIV = 28;
	public static readonly MOD = 29;
	public static readonly AND = 30;
	public static readonly OR = 31;
	public static readonly EQ = 32;
	public static readonly NEQ = 33;
	public static readonly LT = 34;
	public static readonly LE = 35;
	public static readonly GT = 36;
	public static readonly GE = 37;
	public static readonly LAMBDA = 38;
	public static readonly POINT = 39;
	public static readonly DOT = 40;
	public static readonly INT_LIT = 41;
	public static readonly FLOAT_LIT = 42;
	public static readonly ID = 43;
	public static readonly STRUCTNAME = 44;
	public static readonly STRING = 45;
	public static readonly WS = 46;
	public static readonly LINE_COMMENT = 47;
	public static readonly BLOCK_COMMENT = 48;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'int'", 
                                                            "'float'", "'void'", 
                                                            "'const'", "'return'", 
                                                            "'if'", "'else'", 
                                                            "'while'", "'break'", 
                                                            "'continue'", 
                                                            "'for'", "'struct'", 
                                                            "'('", "')'", 
                                                            "'['", "']'", 
                                                            "'{'", "'}'", 
                                                            "','", "';'", 
                                                            "'?'", "':'", 
                                                            "'-'", "'!'", 
                                                            "'='", "'+'", 
                                                            "'*'", "'/'", 
                                                            "'%'", "'&&'", 
                                                            "'||'", "'=='", 
                                                            "'!='", "'<'", 
                                                            "'<='", "'>'", 
                                                            "'>='", "'^'", 
                                                            "'.'", "'->'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "INT", 
                                                             "FLOAT", "VOID", 
                                                             "CONST", "RETURN", 
                                                             "IF", "ELSE", 
                                                             "WHILE", "BREAK", 
                                                             "CONTINUE", 
                                                             "FOR", "STRUCT", 
                                                             "LP", "RP", 
                                                             "LB", "RB", 
                                                             "LC", "RC", 
                                                             "COMMA", "SEMICOLON", 
                                                             "QUESTION", 
                                                             "COLON", "MINUS", 
                                                             "NOT", "ASSIGN", 
                                                             "ADD", "MUL", 
                                                             "DIV", "MOD", 
                                                             "AND", "OR", 
                                                             "EQ", "NEQ", 
                                                             "LT", "LE", 
                                                             "GT", "GE", 
                                                             "LAMBDA", "POINT", 
                                                             "DOT", "INT_LIT", 
                                                             "FLOAT_LIT", 
                                                             "ID", "STRUCTNAME", 
                                                             "STRING", "WS", 
                                                             "LINE_COMMENT", 
                                                             "BLOCK_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"INT", "FLOAT", "VOID", "CONST", "RETURN", "IF", "ELSE", "WHILE", "BREAK", 
		"CONTINUE", "FOR", "STRUCT", "LP", "RP", "LB", "RB", "LC", "RC", "COMMA", 
		"SEMICOLON", "QUESTION", "COLON", "MINUS", "NOT", "ASSIGN", "ADD", "MUL", 
		"DIV", "MOD", "AND", "OR", "EQ", "NEQ", "LT", "LE", "GT", "GE", "LAMBDA", 
		"POINT", "DOT", "INT_LIT", "FLOAT_LIT", "EXP", "ID", "STRUCTNAME", "STRING", 
		"ESC", "WS", "LINE_COMMENT", "BLOCK_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, SysY2022ELexer._ATN, SysY2022ELexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "SysY2022E.g4"; }

	public get literalNames(): (string | null)[] { return SysY2022ELexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return SysY2022ELexer.symbolicNames; }
	public get ruleNames(): string[] { return SysY2022ELexer.ruleNames; }

	public get serializedATN(): number[] { return SysY2022ELexer._serializedATN; }

	public get channelNames(): string[] { return SysY2022ELexer.channelNames; }

	public get modeNames(): string[] { return SysY2022ELexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,48,342,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,1,0,1,0,1,0,1,0,1,1,1,1,1,1,
	1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
	1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,
	1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,
	1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,
	15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,
	1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,
	29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,34,1,34,
	1,34,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,4,
	40,234,8,40,11,40,12,40,235,1,41,4,41,239,8,41,11,41,12,41,240,1,41,1,41,
	5,41,245,8,41,10,41,12,41,248,9,41,1,41,3,41,251,8,41,1,41,1,41,4,41,255,
	8,41,11,41,12,41,256,1,41,3,41,260,8,41,1,41,4,41,263,8,41,11,41,12,41,
	264,1,41,3,41,268,8,41,1,42,1,42,3,42,272,8,42,1,42,4,42,275,8,42,11,42,
	12,42,276,1,43,1,43,5,43,281,8,43,10,43,12,43,284,9,43,1,44,1,44,5,44,288,
	8,44,10,44,12,44,291,9,44,1,45,1,45,1,45,5,45,296,8,45,10,45,12,45,299,
	9,45,1,45,1,45,1,46,1,46,1,46,1,46,3,46,307,8,46,1,47,1,47,1,47,1,47,1,
	48,1,48,1,48,1,48,5,48,317,8,48,10,48,12,48,320,9,48,1,48,3,48,323,8,48,
	1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,5,49,333,8,49,10,49,12,49,336,9,
	49,1,49,1,49,1,49,1,49,1,49,3,297,318,334,0,50,1,1,3,2,5,3,7,4,9,5,11,6,
	13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
	19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
	31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
	0,87,43,89,44,91,45,93,0,95,46,97,47,99,48,1,0,7,1,0,48,57,2,0,69,69,101,
	101,2,0,43,43,45,45,2,0,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,0,65,
	90,95,95,3,0,9,10,13,13,32,32,358,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,
	7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
	0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
	1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
	0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
	1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
	0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
	1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
	0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
	1,0,0,0,1,101,1,0,0,0,3,105,1,0,0,0,5,111,1,0,0,0,7,116,1,0,0,0,9,122,1,
	0,0,0,11,129,1,0,0,0,13,132,1,0,0,0,15,137,1,0,0,0,17,143,1,0,0,0,19,149,
	1,0,0,0,21,158,1,0,0,0,23,162,1,0,0,0,25,169,1,0,0,0,27,171,1,0,0,0,29,
	173,1,0,0,0,31,175,1,0,0,0,33,177,1,0,0,0,35,179,1,0,0,0,37,181,1,0,0,0,
	39,183,1,0,0,0,41,185,1,0,0,0,43,187,1,0,0,0,45,189,1,0,0,0,47,191,1,0,
	0,0,49,193,1,0,0,0,51,195,1,0,0,0,53,197,1,0,0,0,55,199,1,0,0,0,57,201,
	1,0,0,0,59,203,1,0,0,0,61,206,1,0,0,0,63,209,1,0,0,0,65,212,1,0,0,0,67,
	215,1,0,0,0,69,217,1,0,0,0,71,220,1,0,0,0,73,222,1,0,0,0,75,225,1,0,0,0,
	77,227,1,0,0,0,79,229,1,0,0,0,81,233,1,0,0,0,83,267,1,0,0,0,85,269,1,0,
	0,0,87,278,1,0,0,0,89,285,1,0,0,0,91,292,1,0,0,0,93,306,1,0,0,0,95,308,
	1,0,0,0,97,312,1,0,0,0,99,328,1,0,0,0,101,102,5,105,0,0,102,103,5,110,0,
	0,103,104,5,116,0,0,104,2,1,0,0,0,105,106,5,102,0,0,106,107,5,108,0,0,107,
	108,5,111,0,0,108,109,5,97,0,0,109,110,5,116,0,0,110,4,1,0,0,0,111,112,
	5,118,0,0,112,113,5,111,0,0,113,114,5,105,0,0,114,115,5,100,0,0,115,6,1,
	0,0,0,116,117,5,99,0,0,117,118,5,111,0,0,118,119,5,110,0,0,119,120,5,115,
	0,0,120,121,5,116,0,0,121,8,1,0,0,0,122,123,5,114,0,0,123,124,5,101,0,0,
	124,125,5,116,0,0,125,126,5,117,0,0,126,127,5,114,0,0,127,128,5,110,0,0,
	128,10,1,0,0,0,129,130,5,105,0,0,130,131,5,102,0,0,131,12,1,0,0,0,132,133,
	5,101,0,0,133,134,5,108,0,0,134,135,5,115,0,0,135,136,5,101,0,0,136,14,
	1,0,0,0,137,138,5,119,0,0,138,139,5,104,0,0,139,140,5,105,0,0,140,141,5,
	108,0,0,141,142,5,101,0,0,142,16,1,0,0,0,143,144,5,98,0,0,144,145,5,114,
	0,0,145,146,5,101,0,0,146,147,5,97,0,0,147,148,5,107,0,0,148,18,1,0,0,0,
	149,150,5,99,0,0,150,151,5,111,0,0,151,152,5,110,0,0,152,153,5,116,0,0,
	153,154,5,105,0,0,154,155,5,110,0,0,155,156,5,117,0,0,156,157,5,101,0,0,
	157,20,1,0,0,0,158,159,5,102,0,0,159,160,5,111,0,0,160,161,5,114,0,0,161,
	22,1,0,0,0,162,163,5,115,0,0,163,164,5,116,0,0,164,165,5,114,0,0,165,166,
	5,117,0,0,166,167,5,99,0,0,167,168,5,116,0,0,168,24,1,0,0,0,169,170,5,40,
	0,0,170,26,1,0,0,0,171,172,5,41,0,0,172,28,1,0,0,0,173,174,5,91,0,0,174,
	30,1,0,0,0,175,176,5,93,0,0,176,32,1,0,0,0,177,178,5,123,0,0,178,34,1,0,
	0,0,179,180,5,125,0,0,180,36,1,0,0,0,181,182,5,44,0,0,182,38,1,0,0,0,183,
	184,5,59,0,0,184,40,1,0,0,0,185,186,5,63,0,0,186,42,1,0,0,0,187,188,5,58,
	0,0,188,44,1,0,0,0,189,190,5,45,0,0,190,46,1,0,0,0,191,192,5,33,0,0,192,
	48,1,0,0,0,193,194,5,61,0,0,194,50,1,0,0,0,195,196,5,43,0,0,196,52,1,0,
	0,0,197,198,5,42,0,0,198,54,1,0,0,0,199,200,5,47,0,0,200,56,1,0,0,0,201,
	202,5,37,0,0,202,58,1,0,0,0,203,204,5,38,0,0,204,205,5,38,0,0,205,60,1,
	0,0,0,206,207,5,124,0,0,207,208,5,124,0,0,208,62,1,0,0,0,209,210,5,61,0,
	0,210,211,5,61,0,0,211,64,1,0,0,0,212,213,5,33,0,0,213,214,5,61,0,0,214,
	66,1,0,0,0,215,216,5,60,0,0,216,68,1,0,0,0,217,218,5,60,0,0,218,219,5,61,
	0,0,219,70,1,0,0,0,220,221,5,62,0,0,221,72,1,0,0,0,222,223,5,62,0,0,223,
	224,5,61,0,0,224,74,1,0,0,0,225,226,5,94,0,0,226,76,1,0,0,0,227,228,5,46,
	0,0,228,78,1,0,0,0,229,230,5,45,0,0,230,231,5,62,0,0,231,80,1,0,0,0,232,
	234,7,0,0,0,233,232,1,0,0,0,234,235,1,0,0,0,235,233,1,0,0,0,235,236,1,0,
	0,0,236,82,1,0,0,0,237,239,7,0,0,0,238,237,1,0,0,0,239,240,1,0,0,0,240,
	238,1,0,0,0,240,241,1,0,0,0,241,242,1,0,0,0,242,246,5,46,0,0,243,245,7,
	0,0,0,244,243,1,0,0,0,245,248,1,0,0,0,246,244,1,0,0,0,246,247,1,0,0,0,247,
	250,1,0,0,0,248,246,1,0,0,0,249,251,3,85,42,0,250,249,1,0,0,0,250,251,1,
	0,0,0,251,268,1,0,0,0,252,254,5,46,0,0,253,255,7,0,0,0,254,253,1,0,0,0,
	255,256,1,0,0,0,256,254,1,0,0,0,256,257,1,0,0,0,257,259,1,0,0,0,258,260,
	3,85,42,0,259,258,1,0,0,0,259,260,1,0,0,0,260,268,1,0,0,0,261,263,7,0,0,
	0,262,261,1,0,0,0,263,264,1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,266,
	1,0,0,0,266,268,3,85,42,0,267,238,1,0,0,0,267,252,1,0,0,0,267,262,1,0,0,
	0,268,84,1,0,0,0,269,271,7,1,0,0,270,272,7,2,0,0,271,270,1,0,0,0,271,272,
	1,0,0,0,272,274,1,0,0,0,273,275,7,0,0,0,274,273,1,0,0,0,275,276,1,0,0,0,
	276,274,1,0,0,0,276,277,1,0,0,0,277,86,1,0,0,0,278,282,7,3,0,0,279,281,
	7,4,0,0,280,279,1,0,0,0,281,284,1,0,0,0,282,280,1,0,0,0,282,283,1,0,0,0,
	283,88,1,0,0,0,284,282,1,0,0,0,285,289,7,5,0,0,286,288,7,4,0,0,287,286,
	1,0,0,0,288,291,1,0,0,0,289,287,1,0,0,0,289,290,1,0,0,0,290,90,1,0,0,0,
	291,289,1,0,0,0,292,297,5,34,0,0,293,296,3,93,46,0,294,296,9,0,0,0,295,
	293,1,0,0,0,295,294,1,0,0,0,296,299,1,0,0,0,297,298,1,0,0,0,297,295,1,0,
	0,0,298,300,1,0,0,0,299,297,1,0,0,0,300,301,5,34,0,0,301,92,1,0,0,0,302,
	303,5,92,0,0,303,307,5,34,0,0,304,305,5,92,0,0,305,307,5,92,0,0,306,302,
	1,0,0,0,306,304,1,0,0,0,307,94,1,0,0,0,308,309,7,6,0,0,309,310,1,0,0,0,
	310,311,6,47,0,0,311,96,1,0,0,0,312,313,5,47,0,0,313,314,5,47,0,0,314,318,
	1,0,0,0,315,317,9,0,0,0,316,315,1,0,0,0,317,320,1,0,0,0,318,319,1,0,0,0,
	318,316,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,321,323,5,13,0,0,322,321,
	1,0,0,0,322,323,1,0,0,0,323,324,1,0,0,0,324,325,5,10,0,0,325,326,1,0,0,
	0,326,327,6,48,0,0,327,98,1,0,0,0,328,329,5,47,0,0,329,330,5,42,0,0,330,
	334,1,0,0,0,331,333,9,0,0,0,332,331,1,0,0,0,333,336,1,0,0,0,334,335,1,0,
	0,0,334,332,1,0,0,0,335,337,1,0,0,0,336,334,1,0,0,0,337,338,5,42,0,0,338,
	339,5,47,0,0,339,340,1,0,0,0,340,341,6,49,0,0,341,100,1,0,0,0,19,0,235,
	240,246,250,256,259,264,267,271,276,282,289,295,297,306,318,322,334,1,6,
	0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SysY2022ELexer.__ATN) {
			SysY2022ELexer.__ATN = new ATNDeserializer().deserialize(SysY2022ELexer._serializedATN);
		}

		return SysY2022ELexer.__ATN;
	}


	static DecisionsToDFA = SysY2022ELexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}