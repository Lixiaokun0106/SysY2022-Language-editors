// Generated from SysY2022E.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class SysY2022ELexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly INT = 5;
	public static readonly FLOAT = 6;
	public static readonly VOID = 7;
	public static readonly CONST = 8;
	public static readonly RETURN = 9;
	public static readonly IF = 10;
	public static readonly ELSE = 11;
	public static readonly WHILE = 12;
	public static readonly BREAK = 13;
	public static readonly CONTINUE = 14;
	public static readonly FOR = 15;
	public static readonly LP = 16;
	public static readonly RP = 17;
	public static readonly LB = 18;
	public static readonly RB = 19;
	public static readonly LC = 20;
	public static readonly RC = 21;
	public static readonly COMMA = 22;
	public static readonly SEMICOLON = 23;
	public static readonly QUESTION = 24;
	public static readonly COLON = 25;
	public static readonly MINUS = 26;
	public static readonly NOT = 27;
	public static readonly ASSIGN = 28;
	public static readonly ADD = 29;
	public static readonly MUL = 30;
	public static readonly DIV = 31;
	public static readonly MOD = 32;
	public static readonly AND = 33;
	public static readonly OR = 34;
	public static readonly EQ = 35;
	public static readonly NEQ = 36;
	public static readonly LT = 37;
	public static readonly LE = 38;
	public static readonly GT = 39;
	public static readonly GE = 40;
	public static readonly INT_LIT = 41;
	public static readonly FLOAT_LIT = 42;
	public static readonly ID = 43;
	public static readonly STRING = 44;
	public static readonly WS = 45;
	public static readonly LINE_COMMENT = 46;
	public static readonly BLOCK_COMMENT = 47;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, "'struct'", 
                                                            "'->'", "'^'", 
                                                            "'.'", "'int'", 
                                                            "'float'", "'void'", 
                                                            "'const'", "'return'", 
                                                            "'if'", "'else'", 
                                                            "'while'", "'break'", 
                                                            "'continue'", 
                                                            "'for'", "'('", 
                                                            "')'", "'['", 
                                                            "']'", "'{'", 
                                                            "'}'", "','", 
                                                            "';'", "'?'", 
                                                            "':'", "'-'", 
                                                            "'!'", "'='", 
                                                            "'+'", "'*'", 
                                                            "'/'", "'%'", 
                                                            "'&&'", "'||'", 
                                                            "'=='", "'!='", 
                                                            "'<'", "'<='", 
                                                            "'>'", "'>='" ];
	public static readonly symbolicNames: (string | null)[] = [ null, null, 
                                                             null, null, 
                                                             null, "INT", 
                                                             "FLOAT", "VOID", 
                                                             "CONST", "RETURN", 
                                                             "IF", "ELSE", 
                                                             "WHILE", "BREAK", 
                                                             "CONTINUE", 
                                                             "FOR", "LP", 
                                                             "RP", "LB", 
                                                             "RB", "LC", 
                                                             "RC", "COMMA", 
                                                             "SEMICOLON", 
                                                             "QUESTION", 
                                                             "COLON", "MINUS", 
                                                             "NOT", "ASSIGN", 
                                                             "ADD", "MUL", 
                                                             "DIV", "MOD", 
                                                             "AND", "OR", 
                                                             "EQ", "NEQ", 
                                                             "LT", "LE", 
                                                             "GT", "GE", 
                                                             "INT_LIT", 
                                                             "FLOAT_LIT", 
                                                             "ID", "STRING", 
                                                             "WS", "LINE_COMMENT", 
                                                             "BLOCK_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "INT", "FLOAT", "VOID", "CONST", "RETURN", 
		"IF", "ELSE", "WHILE", "BREAK", "CONTINUE", "FOR", "LP", "RP", "LB", "RB", 
		"LC", "RC", "COMMA", "SEMICOLON", "QUESTION", "COLON", "MINUS", "NOT", 
		"ASSIGN", "ADD", "MUL", "DIV", "MOD", "AND", "OR", "EQ", "NEQ", "LT", 
		"LE", "GT", "GE", "INT_LIT", "FLOAT_LIT", "EXP", "ID", "STRING", "ESC", 
		"WS", "LINE_COMMENT", "BLOCK_COMMENT",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, SysY2022ELexer._ATN, SysY2022ELexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "SysY2022E.g4"; }

	public get literalNames(): (string | null)[] { return SysY2022ELexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return SysY2022ELexer.symbolicNames; }
	public get ruleNames(): string[] { return SysY2022ELexer.ruleNames; }

	public get serializedATN(): number[] { return SysY2022ELexer._serializedATN; }

	public get channelNames(): string[] { return SysY2022ELexer.channelNames; }

	public get modeNames(): string[] { return SysY2022ELexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,47,333,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,
	31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,
	7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
	45,2,46,7,46,2,47,7,47,2,48,7,48,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
	1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
	6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,
	10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,
	1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,
	14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
	1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,
	29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,
	1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,40,4,
	40,232,8,40,11,40,12,40,233,1,41,4,41,237,8,41,11,41,12,41,238,1,41,1,41,
	5,41,243,8,41,10,41,12,41,246,9,41,1,41,3,41,249,8,41,1,41,1,41,4,41,253,
	8,41,11,41,12,41,254,1,41,3,41,258,8,41,1,41,4,41,261,8,41,11,41,12,41,
	262,1,41,3,41,266,8,41,1,42,1,42,3,42,270,8,42,1,42,4,42,273,8,42,11,42,
	12,42,274,1,43,1,43,5,43,279,8,43,10,43,12,43,282,9,43,1,44,1,44,1,44,5,
	44,287,8,44,10,44,12,44,290,9,44,1,44,1,44,1,45,1,45,1,45,1,45,3,45,298,
	8,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,5,47,308,8,47,10,47,12,47,
	311,9,47,1,47,3,47,314,8,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,5,48,
	324,8,48,10,48,12,48,327,9,48,1,48,1,48,1,48,1,48,1,48,3,288,309,325,0,
	49,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
	29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
	53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
	77,39,79,40,81,41,83,42,85,0,87,43,89,44,91,0,93,45,95,46,97,47,1,0,6,1,
	0,48,57,2,0,69,69,101,101,2,0,43,43,45,45,3,0,65,90,95,95,97,122,4,0,48,
	57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,348,0,1,1,0,0,0,0,3,1,0,0,0,
	0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
	0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
	27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
	0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,
	49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,
	0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,
	71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,
	0,0,0,83,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,
	97,1,0,0,0,1,99,1,0,0,0,3,106,1,0,0,0,5,109,1,0,0,0,7,111,1,0,0,0,9,113,
	1,0,0,0,11,117,1,0,0,0,13,123,1,0,0,0,15,128,1,0,0,0,17,134,1,0,0,0,19,
	141,1,0,0,0,21,144,1,0,0,0,23,149,1,0,0,0,25,155,1,0,0,0,27,161,1,0,0,0,
	29,170,1,0,0,0,31,174,1,0,0,0,33,176,1,0,0,0,35,178,1,0,0,0,37,180,1,0,
	0,0,39,182,1,0,0,0,41,184,1,0,0,0,43,186,1,0,0,0,45,188,1,0,0,0,47,190,
	1,0,0,0,49,192,1,0,0,0,51,194,1,0,0,0,53,196,1,0,0,0,55,198,1,0,0,0,57,
	200,1,0,0,0,59,202,1,0,0,0,61,204,1,0,0,0,63,206,1,0,0,0,65,208,1,0,0,0,
	67,211,1,0,0,0,69,214,1,0,0,0,71,217,1,0,0,0,73,220,1,0,0,0,75,222,1,0,
	0,0,77,225,1,0,0,0,79,227,1,0,0,0,81,231,1,0,0,0,83,265,1,0,0,0,85,267,
	1,0,0,0,87,276,1,0,0,0,89,283,1,0,0,0,91,297,1,0,0,0,93,299,1,0,0,0,95,
	303,1,0,0,0,97,319,1,0,0,0,99,100,5,115,0,0,100,101,5,116,0,0,101,102,5,
	114,0,0,102,103,5,117,0,0,103,104,5,99,0,0,104,105,5,116,0,0,105,2,1,0,
	0,0,106,107,5,45,0,0,107,108,5,62,0,0,108,4,1,0,0,0,109,110,5,94,0,0,110,
	6,1,0,0,0,111,112,5,46,0,0,112,8,1,0,0,0,113,114,5,105,0,0,114,115,5,110,
	0,0,115,116,5,116,0,0,116,10,1,0,0,0,117,118,5,102,0,0,118,119,5,108,0,
	0,119,120,5,111,0,0,120,121,5,97,0,0,121,122,5,116,0,0,122,12,1,0,0,0,123,
	124,5,118,0,0,124,125,5,111,0,0,125,126,5,105,0,0,126,127,5,100,0,0,127,
	14,1,0,0,0,128,129,5,99,0,0,129,130,5,111,0,0,130,131,5,110,0,0,131,132,
	5,115,0,0,132,133,5,116,0,0,133,16,1,0,0,0,134,135,5,114,0,0,135,136,5,
	101,0,0,136,137,5,116,0,0,137,138,5,117,0,0,138,139,5,114,0,0,139,140,5,
	110,0,0,140,18,1,0,0,0,141,142,5,105,0,0,142,143,5,102,0,0,143,20,1,0,0,
	0,144,145,5,101,0,0,145,146,5,108,0,0,146,147,5,115,0,0,147,148,5,101,0,
	0,148,22,1,0,0,0,149,150,5,119,0,0,150,151,5,104,0,0,151,152,5,105,0,0,
	152,153,5,108,0,0,153,154,5,101,0,0,154,24,1,0,0,0,155,156,5,98,0,0,156,
	157,5,114,0,0,157,158,5,101,0,0,158,159,5,97,0,0,159,160,5,107,0,0,160,
	26,1,0,0,0,161,162,5,99,0,0,162,163,5,111,0,0,163,164,5,110,0,0,164,165,
	5,116,0,0,165,166,5,105,0,0,166,167,5,110,0,0,167,168,5,117,0,0,168,169,
	5,101,0,0,169,28,1,0,0,0,170,171,5,102,0,0,171,172,5,111,0,0,172,173,5,
	114,0,0,173,30,1,0,0,0,174,175,5,40,0,0,175,32,1,0,0,0,176,177,5,41,0,0,
	177,34,1,0,0,0,178,179,5,91,0,0,179,36,1,0,0,0,180,181,5,93,0,0,181,38,
	1,0,0,0,182,183,5,123,0,0,183,40,1,0,0,0,184,185,5,125,0,0,185,42,1,0,0,
	0,186,187,5,44,0,0,187,44,1,0,0,0,188,189,5,59,0,0,189,46,1,0,0,0,190,191,
	5,63,0,0,191,48,1,0,0,0,192,193,5,58,0,0,193,50,1,0,0,0,194,195,5,45,0,
	0,195,52,1,0,0,0,196,197,5,33,0,0,197,54,1,0,0,0,198,199,5,61,0,0,199,56,
	1,0,0,0,200,201,5,43,0,0,201,58,1,0,0,0,202,203,5,42,0,0,203,60,1,0,0,0,
	204,205,5,47,0,0,205,62,1,0,0,0,206,207,5,37,0,0,207,64,1,0,0,0,208,209,
	5,38,0,0,209,210,5,38,0,0,210,66,1,0,0,0,211,212,5,124,0,0,212,213,5,124,
	0,0,213,68,1,0,0,0,214,215,5,61,0,0,215,216,5,61,0,0,216,70,1,0,0,0,217,
	218,5,33,0,0,218,219,5,61,0,0,219,72,1,0,0,0,220,221,5,60,0,0,221,74,1,
	0,0,0,222,223,5,60,0,0,223,224,5,61,0,0,224,76,1,0,0,0,225,226,5,62,0,0,
	226,78,1,0,0,0,227,228,5,62,0,0,228,229,5,61,0,0,229,80,1,0,0,0,230,232,
	7,0,0,0,231,230,1,0,0,0,232,233,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,
	234,82,1,0,0,0,235,237,7,0,0,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,
	1,0,0,0,238,239,1,0,0,0,239,240,1,0,0,0,240,244,5,46,0,0,241,243,7,0,0,
	0,242,241,1,0,0,0,243,246,1,0,0,0,244,242,1,0,0,0,244,245,1,0,0,0,245,248,
	1,0,0,0,246,244,1,0,0,0,247,249,3,85,42,0,248,247,1,0,0,0,248,249,1,0,0,
	0,249,266,1,0,0,0,250,252,5,46,0,0,251,253,7,0,0,0,252,251,1,0,0,0,253,
	254,1,0,0,0,254,252,1,0,0,0,254,255,1,0,0,0,255,257,1,0,0,0,256,258,3,85,
	42,0,257,256,1,0,0,0,257,258,1,0,0,0,258,266,1,0,0,0,259,261,7,0,0,0,260,
	259,1,0,0,0,261,262,1,0,0,0,262,260,1,0,0,0,262,263,1,0,0,0,263,264,1,0,
	0,0,264,266,3,85,42,0,265,236,1,0,0,0,265,250,1,0,0,0,265,260,1,0,0,0,266,
	84,1,0,0,0,267,269,7,1,0,0,268,270,7,2,0,0,269,268,1,0,0,0,269,270,1,0,
	0,0,270,272,1,0,0,0,271,273,7,0,0,0,272,271,1,0,0,0,273,274,1,0,0,0,274,
	272,1,0,0,0,274,275,1,0,0,0,275,86,1,0,0,0,276,280,7,3,0,0,277,279,7,4,
	0,0,278,277,1,0,0,0,279,282,1,0,0,0,280,278,1,0,0,0,280,281,1,0,0,0,281,
	88,1,0,0,0,282,280,1,0,0,0,283,288,5,34,0,0,284,287,3,91,45,0,285,287,9,
	0,0,0,286,284,1,0,0,0,286,285,1,0,0,0,287,290,1,0,0,0,288,289,1,0,0,0,288,
	286,1,0,0,0,289,291,1,0,0,0,290,288,1,0,0,0,291,292,5,34,0,0,292,90,1,0,
	0,0,293,294,5,92,0,0,294,298,5,34,0,0,295,296,5,92,0,0,296,298,5,92,0,0,
	297,293,1,0,0,0,297,295,1,0,0,0,298,92,1,0,0,0,299,300,7,5,0,0,300,301,
	1,0,0,0,301,302,6,46,0,0,302,94,1,0,0,0,303,304,5,47,0,0,304,305,5,47,0,
	0,305,309,1,0,0,0,306,308,9,0,0,0,307,306,1,0,0,0,308,311,1,0,0,0,309,310,
	1,0,0,0,309,307,1,0,0,0,310,313,1,0,0,0,311,309,1,0,0,0,312,314,5,13,0,
	0,313,312,1,0,0,0,313,314,1,0,0,0,314,315,1,0,0,0,315,316,5,10,0,0,316,
	317,1,0,0,0,317,318,6,47,0,0,318,96,1,0,0,0,319,320,5,47,0,0,320,321,5,
	42,0,0,321,325,1,0,0,0,322,324,9,0,0,0,323,322,1,0,0,0,324,327,1,0,0,0,
	325,326,1,0,0,0,325,323,1,0,0,0,326,328,1,0,0,0,327,325,1,0,0,0,328,329,
	5,42,0,0,329,330,5,47,0,0,330,331,1,0,0,0,331,332,6,48,0,0,332,98,1,0,0,
	0,18,0,233,238,244,248,254,257,262,265,269,274,280,286,288,297,309,313,
	325,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!SysY2022ELexer.__ATN) {
			SysY2022ELexer.__ATN = new ATNDeserializer().deserialize(SysY2022ELexer._serializedATN);
		}

		return SysY2022ELexer.__ATN;
	}


	static DecisionsToDFA = SysY2022ELexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}